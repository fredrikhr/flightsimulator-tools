cmake_minimum_required(VERSION 3.26)
project(FredrikHr.MsFlightSimulatorTools VERSION 0.0.0 LANGUAGES)
set(REPO_ROOT_DIR "${PROJECT_SOURCE_DIR}"
  CACHE PATH "Respository root directory path"
)
mark_as_advanced(REPO_ROOT_DIR)

cmake_path(APPEND REPO_ROOT_DIR obj OUTPUT_VARIABLE REPO_ROOT_BINARY_DIR)
cmake_path(APPEND REPO_ROOT_DIR bin OUTPUT_VARIABLE REPO_ROOT_OUTPUT_DIR)
cmake_path(APPEND REPO_ROOT_DIR cmake OUTPUT_VARIABLE REPO_ROOT_MODULE_DIR)
list(PREPEND CMAKE_MODULE_PATH ${REPO_ROOT_MODULE_DIR})

foreach(REPO_PROJECT_SOURCE_DIR_NAME IN ITEMS
  FredrikHr.MsFlightSimulatorTools.SimConnectConsoleNative
  )

  cmake_path(APPEND REPO_ROOT_DIR src "${REPO_PROJECT_SOURCE_DIR_NAME}" OUTPUT_VARIABLE REPO_PROJECT_SOURCE_DIR)
  cmake_path(APPEND REPO_ROOT_BINARY_DIR "${REPO_PROJECT_SOURCE_DIR_NAME}" OUTPUT_VARIABLE REPO_PROJECT_BINARY_DIR)
  cmake_path(APPEND REPO_ROOT_OUTPUT_DIR "${REPO_PROJECT_SOURCE_DIR_NAME}" OUTPUT_VARIABLE REPO_PROJECT_OUTPUT_DIR)

  set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${REPO_PROJECT_OUTPUT_DIR}")
  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${REPO_PROJECT_OUTPUT_DIR}")
  set(CMAKE_PDB_OUTPUT_DIRECTORY "${REPO_PROJECT_OUTPUT_DIR}")
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${REPO_PROJECT_OUTPUT_DIR}")
  if(CMAKE_BUILD_TYPE)
    string(TOUPPER ${CMAKE_BUILD_TYPE} REPO_CONFIGURATION_TYPE)
    cmake_path(APPEND CMAKE_ARCHIVE_OUTPUT_DIRECTORY "$<CONFIG>" OUTPUT_VARIABLE CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${REPO_CONFIGURATION_TYPE})
    cmake_path(APPEND CMAKE_LIBRARY_OUTPUT_DIRECTORY "$<CONFIG>" OUTPUT_VARIABLE CMAKE_LIBRARY_OUTPUT_DIRECTORY_${REPO_CONFIGURATION_TYPE})
    cmake_path(APPEND CMAKE_PDB_OUTPUT_DIRECTORY "$<CONFIG>" OUTPUT_VARIABLE CMAKE_PDB_OUTPUT_DIRECTORY_${REPO_CONFIGURATION_TYPE})
    cmake_path(APPEND CMAKE_RUNTIME_OUTPUT_DIRECTORY "$<CONFIG>" OUTPUT_VARIABLE CMAKE_RUNTIME_OUTPUT_DIRECTORY_${REPO_CONFIGURATION_TYPE})
    unset(REPO_CONFIGURATION_TYPE)
  endif(CMAKE_BUILD_TYPE)
  foreach(REPO_CONFIGURATION_TYPE ${CMAKE_CONFIGURATION_TYPES})
    string(TOUPPER ${REPO_CONFIGURATION_TYPE} REPO_CONFIGURATION_TYPE)
    cmake_path(APPEND CMAKE_ARCHIVE_OUTPUT_DIRECTORY "$<CONFIG>" OUTPUT_VARIABLE CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${REPO_CONFIGURATION_TYPE})
    cmake_path(APPEND CMAKE_LIBRARY_OUTPUT_DIRECTORY "$<CONFIG>" OUTPUT_VARIABLE CMAKE_LIBRARY_OUTPUT_DIRECTORY_${REPO_CONFIGURATION_TYPE})
    cmake_path(APPEND CMAKE_PDB_OUTPUT_DIRECTORY "$<CONFIG>" OUTPUT_VARIABLE CMAKE_PDB_OUTPUT_DIRECTORY_${REPO_CONFIGURATION_TYPE})
    cmake_path(APPEND CMAKE_RUNTIME_OUTPUT_DIRECTORY "$<CONFIG>" OUTPUT_VARIABLE CMAKE_RUNTIME_OUTPUT_DIRECTORY_${REPO_CONFIGURATION_TYPE})
  endforeach(REPO_CONFIGURATION_TYPE)

  add_subdirectory(
    "${REPO_PROJECT_SOURCE_DIR}"
    "${REPO_PROJECT_BINARY_DIR}"
  )

endforeach(REPO_PROJECT_SOURCE_DIR_NAME)
